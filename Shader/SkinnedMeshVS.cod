//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer OBJECT_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   float4 material_color;             // Offset:   64 Size:    16
//   row_major float4x4 bone_transforms[256];// Offset:   80 Size: 16384
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 view_projection;// Offset:    0 Size:    64
//   float4 light_direction;            // Offset:   64 Size:    16 [unused]
//   float4 camera_position;            // Offset:   80 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// OBJECT_CONSTANT_BUFFER            cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float       
// TEXCOORD                 0   xy          3     NONE   float   xy  
// WEIGHTS                  0   xyzw        4     NONE   float   xyzw
// BONES                    0   xyzw        5     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// NORMAL                   0   xyzw        2     NONE   float   xyzw
// POSITION                 0   xyzw        3     NONE   float       
// COLOR                    0   xyzw        4     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1029], dynamicIndexed
dcl_constantbuffer CB1[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v3.xy
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_output o4.xyzw
dcl_temps 7
mul r0.xyzw, cb0[3].yyyy, cb1[1].xyzw
mad r0.xyzw, cb0[3].xxxx, cb1[0].xyzw, r0.xyzw
mad r0.xyzw, cb0[3].zzzz, cb1[2].xyzw, r0.xyzw
mad r0.xyzw, cb0[3].wwww, cb1[3].xyzw, r0.xyzw
mul r1.xyzw, cb0[2].yyyy, cb1[1].xyzw
mad r1.xyzw, cb0[2].xxxx, cb1[0].xyzw, r1.xyzw
mad r1.xyzw, cb0[2].zzzz, cb1[2].xyzw, r1.xyzw
mad r1.xyzw, cb0[2].wwww, cb1[3].xyzw, r1.xyzw
mul r2.xyzw, cb0[0].yyyy, cb1[1].xyzw
mad r2.xyzw, cb0[0].xxxx, cb1[0].xyzw, r2.xyzw
mad r2.xyzw, cb0[0].zzzz, cb1[2].xyzw, r2.xyzw
mad r2.xyzw, cb0[0].wwww, cb1[3].xyzw, r2.xyzw
mul r3.xyzw, cb0[1].yyyy, cb1[1].xyzw
mad r3.xyzw, cb0[1].xxxx, cb1[0].xyzw, r3.xyzw
mad r3.xyzw, cb0[1].zzzz, cb1[2].xyzw, r3.xyzw
mad r3.xyzw, cb0[1].wwww, cb1[3].xyzw, r3.xyzw
ishl r4.xyzw, v5.xyzw, l(2, 2, 2, 2)
mul r5.xyz, v0.yyyy, cb0[r4.y + 6].xyzx
mad r5.xyz, v0.xxxx, cb0[r4.y + 5].xyzx, r5.xyzx
mad r5.xyz, v0.zzzz, cb0[r4.y + 7].xyzx, r5.xyzx
mad r5.xyz, v0.wwww, cb0[r4.y + 8].xyzx, r5.xyzx
mul r5.xyz, r5.xyzx, v4.yyyy
mul r6.xyz, v0.yyyy, cb0[r4.x + 6].xyzx
mad r6.xyz, v0.xxxx, cb0[r4.x + 5].xyzx, r6.xyzx
mad r6.xyz, v0.zzzz, cb0[r4.x + 7].xyzx, r6.xyzx
mad r6.xyz, v0.wwww, cb0[r4.x + 8].xyzx, r6.xyzx
mad r5.xyz, v4.xxxx, r6.xyzx, r5.xyzx
mul r6.xyz, v0.yyyy, cb0[r4.z + 6].xyzx
mad r6.xyz, v0.xxxx, cb0[r4.z + 5].xyzx, r6.xyzx
mad r6.xyz, v0.zzzz, cb0[r4.z + 7].xyzx, r6.xyzx
mad r6.xyz, v0.wwww, cb0[r4.z + 8].xyzx, r6.xyzx
mad r5.xyz, v4.zzzz, r6.xyzx, r5.xyzx
mul r6.xyz, v0.yyyy, cb0[r4.w + 6].xyzx
mad r6.xyz, v0.xxxx, cb0[r4.w + 5].xyzx, r6.xyzx
mad r6.xyz, v0.zzzz, cb0[r4.w + 7].xyzx, r6.xyzx
mad r6.xyz, v0.wwww, cb0[r4.w + 8].xyzx, r6.xyzx
mad r5.xyz, v4.wwww, r6.xyzx, r5.xyzx
mul r3.xyzw, r3.xyzw, r5.yyyy
mad r2.xyzw, r5.xxxx, r2.xyzw, r3.xyzw
mad r1.xyzw, r5.zzzz, r1.xyzw, r2.xyzw
add o0.xyzw, r0.xyzw, r1.xyzw
mov o1.xy, v3.xyxx
mul r0.xyz, v1.yyyy, cb0[r4.y + 6].xyzx
mad r0.xyz, v1.xxxx, cb0[r4.y + 5].xyzx, r0.xyzx
mad r0.xyz, v1.zzzz, cb0[r4.y + 7].xyzx, r0.xyzx
mul r0.xyz, r0.xyzx, v4.yyyy
mul r1.xyz, v1.yyyy, cb0[r4.x + 6].xyzx
mad r1.xyz, v1.xxxx, cb0[r4.x + 5].xyzx, r1.xyzx
mad r1.xyz, v1.zzzz, cb0[r4.x + 7].xyzx, r1.xyzx
mad r0.xyz, v4.xxxx, r1.xyzx, r0.xyzx
mul r1.xyz, v1.yyyy, cb0[r4.z + 6].xyzx
mad r1.xyz, v1.xxxx, cb0[r4.z + 5].xyzx, r1.xyzx
mad r1.xyz, v1.zzzz, cb0[r4.z + 7].xyzx, r1.xyzx
mad r0.xyz, v4.zzzz, r1.xyzx, r0.xyzx
mul r1.xyz, v1.yyyy, cb0[r4.w + 6].xyzx
mad r1.xyz, v1.xxxx, cb0[r4.w + 5].xyzx, r1.xyzx
mad r1.xyz, v1.zzzz, cb0[r4.w + 7].xyzx, r1.xyzx
mad r0.xyz, v4.wwww, r1.xyzx, r0.xyzx
mul r1.xyzw, r0.yyyy, cb0[1].xyzw
mad r1.xyzw, r0.xxxx, cb0[0].xyzw, r1.xyzw
mad r0.xyzw, r0.zzzz, cb0[2].xyzw, r1.xyzw
dp4 r1.x, r0.xyzw, r0.xyzw
rsq r1.x, r1.x
mul o2.xyzw, r0.xyzw, r1.xxxx
mov o4.xyzw, cb0[4].xyzw
ret 
// Approximately 66 instruction slots used
